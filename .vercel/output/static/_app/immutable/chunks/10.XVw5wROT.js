const _="modulepreload",h=function(a,s){return new URL(a,s).href},f={},b=function(s,i,c){let u=Promise.resolve();if(i&&i.length>0){const n=document.getElementsByTagName("link");u=Promise.all(i.map(e=>{if(e=h(e,c),e in f)return;f[e]=!0;const r=e.endsWith(".css"),d=r?'[rel="stylesheet"]':"";if(!!c)for(let o=n.length-1;o>=0;o--){const l=n[o];if(l.href===e&&(!r||l.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${d}`))return;const t=document.createElement("link");if(t.rel=r?"stylesheet":_,r||(t.as="script",t.crossOrigin=""),t.href=e,document.head.appendChild(t),r)return new Promise((o,l)=>{t.addEventListener("load",o),t.addEventListener("error",()=>l(new Error(`Unable to preload CSS for ${e}`)))})}))}return u.then(()=>s()).catch(n=>{const e=new Event("vite:preloadError",{cancelable:!0});if(e.payload=n,window.dispatchEvent(e),!e.defaultPrevented)throw n})},v=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),y=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),g=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),S=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{b as _,v as a,y as b,g as c,S as d};
